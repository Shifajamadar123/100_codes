class Solution {
    public int search(int[] a, int target) {
        int p=pivot(a);
        if(p==-1)
        {
            return(bin(a,target,0,a.length-1));
        }
        int ans=bin(a,target,0,p);
        if(ans==-1)
        {
            ans=bin(a,target,p+1,a.length-1);
        }
        return(ans);
        
    }
        public int pivot(int []a) {
            int start=0;
            int end=a.length-1;
            while(start<=end)
            {
                int mid=start+(end-start)/2;
                if(mid<end && a[mid]>a[mid+1])
                {
                    return(mid);
                }
                else if(mid>start && a[mid]<a[mid-1])
                {
                    return(mid-1);
                }
                else if(a[start]>=a[mid])
                {
                    end=mid-1;
                }
                else if(a[start]<a[mid])
                {
                    start=mid+1;
                }
            }
            return(-1);
        }
    
    public static int bin(int []a,int target,int start,int end)
	{
			if(a[start]<a[end])	
			{
				while(start<=end)
				{
					
					int mid=start +(end-start)/2;
					if(target<a[mid])
					{
						end=mid-1;
					}
					else if(target>a[mid])
					{
						start=mid+1;
					}
					else
					{
						return(mid);
					}
				}
			}
			else
			{
				while(start<=end)
				{
					int mid=start +(end-start)/2;
					if(target<a[mid])
					{
						start=mid+1;
					}
					else if(target>a[mid])
					{
						end=mid-1;
					}
					else
					{
						return(mid);
					}
				}
			}
		return(-1);
	}
}
