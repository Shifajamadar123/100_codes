#include <stdio.h>
#include <stdlib.h>
#define SIZE 5

void insert(int a[SIZE][SIZE])
{
    int i;
    int j;
    printf("\nEnter matrix:\n");
    for(i=0;i<SIZE;i++)
    {
        for(j=0;j<SIZE;j++)
            a[i][j]=0;
    }
    for(i=0;i<SIZE;i++)
    {
        do
        {
            printf("\nEnter vertex to travel from %d , -1 to quit: ",i);
                scanf("%d",&j);
                if(i==j)
                    continue;
                if(j!=-1)
                {
                    a[i][j]=1;
                }
                else
                    break;
        }while(1);
    }
}

void display(int a[SIZE][SIZE])
{
    int i,j;
    for(i=0;i<SIZE;i++)
    {
        printf("\n");
        for(j=0;j<SIZE;j++)
            printf("%d ",a[i][j]);
    }
}

void bfs(int a[SIZE][SIZE],int visited[SIZE],int start)
{
    int queue[SIZE+1],front=0,rear=-1;
    int i;
    for(i=0;i<SIZE;i++)
        visited[i]=0;
    rear = rear+1;
    queue[rear]=start;
    visited[start]=1;
    while(rear>=front)
    {
        start=queue[front];
        front++;
        printf(" %d ",start);
        for(i=0;i<SIZE;i++)
        {
            if(a[start][i]==1 && visited[i]==0)
            {
                rear=rear+1;
                queue[rear]=i;
                visited[i]=1;
            }
        }
    }
}

void dfs(int a[SIZE][SIZE],int visited[SIZE],int start)
{
    int stack[SIZE],top=-1,i;
    for(i=0;i<SIZE;i++)
        visited[i]=0;


    top++;
    stack[top]=start;
    visited[start]=1;
    while(top!=-1)
    {
        start=stack[top];
        top=top-1;
        printf(" %d ",start);
        for(i=0;i<SIZE;i++)
        {
            if(a[start][i]==1 && visited[i]==0)
            {
                top++;
                stack[top]=i;
                visited[i]=1;
                break;
            }
        }
    }
}

int main()
{
    int ch;
    int start;
    int a[SIZE][SIZE]={0};
    int visited[SIZE]={0};
    do
    {
        printf("\n******MENU******\n");
        printf("1.Insert values in graph\n");
        printf("2.BFS\n");
        printf("3.DFS\n");
        printf("4.Display\n");
        printf("5.Exit\n");
        scanf("%d",&ch);
        switch(ch)
        {
            case 1:insert(a);
                   break;
            case 2:printf("\nWhere to start: ");
                   scanf("%d",&start);
                   bfs(a,visited,start);//the inputs are array,visited array,and vertex where u want to start from
                   break;
            case 3:printf("\nWhere to start: ");
                   scanf("%d",&start);
                   dfs(a,visited,start);
                   break;
            case 4:display(a);
                   break;
            case 5:break;
        }
    }while(ch!=5);
    return 0;
}
