class Solution {
    public boolean searchMatrix(int[][] a, int target) {
        int r=a.length;
        int c=a[0].length;
        if(r==1)
            return(bin(a,target,0,0,c-1));
            
       //run the loop till two rows are remaining
        int rStart=0;
        int rEnd=r-1;
        int midCol=c/2;
        while(rStart<rEnd-1)
        {
            int mid=rStart+(rEnd-rStart)/2;
            if(target>a[mid][midCol])
                rStart=mid;
            else if(target<a[mid][midCol])
                rEnd=mid;
            else
                return(true);
        }
        boolean ans=false;
        ans=bin(a,target,rStart,0,c-1);
        if(ans==false)
        {
            ans=bin(a,target,rEnd,0,c-1);
        }
        return(ans);
        
        
    }
    
    static boolean bin(int [][]a,int target,int row,int cstart,int cend)
    {
        while(cstart<=cend)
        {
            int mid=cstart+(cend-cstart)/2;
            if(target>a[row][mid])
                cstart=mid+1;
            else if(target<a[row][mid])
                cend=mid-1;
            else
                return(true);
        }
        return(false);
    }
}
